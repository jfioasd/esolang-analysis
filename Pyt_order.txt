245 Đ
Đ 	Pushes x onto the stack twice

148 ⇹
⇹ 	Swaps x and y

77 *
* 	y*x † §§§

73 ř
ř 	Returns the array [1,2,...,x] ‡ §

68 ⁻
⁻ 	Decrements x §

61 ⁺
⁺ 	Increments x §

58 +
+ 	y+x † §§§

56 1

54 2

53 Ʃ
Ʃ 	If x is an array, sum its elements; otherwise, sum everything on the stack

52 ←
← 	Gets input

49 ŕ
ŕ 	Pops the top element of the stack and does nothing with it

47 0

39 ↔
↔ 	If x is an array, reverses the order of the elements of x; otherwise, reverses the order of the stack

37 ą
ą 	If x is a number, turns x into an array of digits; if x is a string, turns x into an array of characters ‡

36 Ł
Ł 	If x is an array, returns the length of x; otherwise, returns the size of the stack

35 3

34 -
- 	y-x † §§§

34 ²
² 	x^2 §

32 Ș
Ș 	If y is an array, reverses the last x items of y; otherwise, reverses the last x items of the stack (e.g., if x is 2, then it switches y and z)

32 `
` 	Indicator for looping

30 ł
ł 	If the top of the stack is not 0, go back to the last '`' seen

29 =
= 	Is y=x? † §§§

27 ᴇ
ᴇ 	10^x §

26 Π
Π 	If x is an array, multiplies its elements; otherwise, multiplies everything on the stack

22 %
% 	y mod x †

22 ǰ
ǰ 	If x is a list, joins the elements of x with no delimiters; otherwise, joins everything in the stack with no delimiters

21 /
/ 	y/x † §§§

18 5

18 Ř
Ř 	Returns the array [y,y+1,...,x] ‡ §§§

18 Ɩ
Ɩ 	Casts x to an integer §

17 !
! 	x factorial §

17 4

17 :
: 	The 'Else' in the 'If (...) Then (...) Else (...) - if read, jumps to the next ';' and continues from there

16 6

16 ?
? 	If the top of the stack is 1, continues execution; otherwise, jumps to the next ':' and continues from there

15 ∈
∈ 	Is y in x? §§

15 ;
; 	The end of an if-then-else construction

14 ^
^ 	y^x † §§§

13 7

13 ƥ
ƥ 	Prints x

13 Á
Á 	Pushes the elements of x onto the stack (e.g., if x=[0,1,2,3], then 0,1,2,3 are pushed onto the stack in order

12 ₂
₂ 	x/2 §

12 √
√ 	Square root of x §

12 >
> 	Is y>x? † §§§

12 ~
~ 	-x §

12 <
< 	Is y<x? † §§§

12 ¬
¬ 	Negates x §

12 ɔ
ɔ 	Counts the number of occurrences of y in x §§

12 9

12 Ụ
Ụ 	If x is an array or string, returns the unique elements of x; otherwise, returns the unique elements of the stack

11 △
△ 	Returns the xth triangle number §

11 á
á 	Moves contents of the stack into an array §

11 ž
ž 	Removes all instances of 0 from x, where x is a list

11 ɐ
ɐ 	Modifier for any function marked with †/†† or §§

10 «
« 	Bit-shifts y left by x places † §§§

10 ĉ
ĉ 	Clears the stack

9 ṗ
ṗ 	Is x prime? § ‡

9 Ḟ
Ḟ 	Returns the xth Fibonacci number § ‡

9 Ƈ
Ƈ 	Returns the unicode character with codepoint x § ‡

9 ∧
∧ 	Bitwise AND †

9 \
\ 	If x and y are sets, then returns an array containing all elements of y not in x; otherwise, returns all elements of y not equal to x (set difference - y\x)

9 Ƒ
Ƒ 	Flattens the array at the top of the stack

8 ⅟

8 ɓ
ɓ 	Converts int(x) to a binary string (e.g., 5 becomes 101) §

8 ϼ
ϼ 	Returns the distinct prime factors of x § ‡

8 ʁ
ʁ 	Modifier character; if the top of the stack is an array, reduces the array using the next character's operation (e.g., if the array is [1,2,3,4], and the operation is '^', then it returns [1,8,81]); otherwise, it reduces the stack using the next character's operation

8 ᵮ
ᵮ 	Converts to float §

8 e

8 

7 ⌊
⌊ 	Returns the floor of x §

7 ·
· 	Returns the dot product of x and y

7 ↑
↑ 	If x is an array, gets its maximum; otherwise, gets the maximum of the stack

7 Ś
Ś 	Sums the digits of x ‡ §

7 ₫
₫ 	Reverses the order of the digits in x ‡

7 8

7 ₋
₋ 	Returns the differences between adjacent elements in x (e.g., if x=[1,2,3,4,5], then it returns [1,1,1,1])

7 ⬠
⬠ 	Returns the xth pentagonal number §

6 ⦋
⦋ 	Gets the item at index x from y ‡

6 |
| 	Does x divide y? † §§§

6 ɬ
ɬ 	Appends the string containing the letters (i.e., 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")

6 ɳ
ɳ 	Appends the string containing the digits (i.e., '0123456789')

6 Ĩ
Ĩ 	Interprets y as a base-x string † ‡ §§§

6 Ħ
Ħ 	Returns the Hamming weight of a number in binary § ‡

6 n

6 Ṗ
Ṗ 	x^x §

5 Ǥ
Ǥ 	Returns the GCD of x and y † §§§

5 µ
µ 	If x is an array, gets its mean; otherwise, gets the mean of the stack

5 ḋ
ḋ 	Returns the list of prime factors of x § ‡

5 ₽
₽ 	Is x a palindrome?

5 ⬡
⬡ 	Returns the xth hexagonal number §

5 ↓
↓ 	If x is an array, gets its minimum; otherwise, gets the minimum of the stack

5 ć
ć 	yCx † §§§

5 Å
Å 	Absolute value of x §

5 ş
ş 	If x is an array, sorts x in ascending order; otherwise, sorts the stack in ascending order

5 ᵽ
ᵽ 	Returns the xth prime number § ‡

5 ð
ð 	Returns the list of divisors of x § ‡

5 t

5 r

4 Ṁ
Ṁ 	If x is an array, gets its median; otherwise, gets the median of the stack

4 ɫ
ɫ 	Appends the string containing the lowercase letters (i.e., 'abcdefghijklmnopqrstuvwxyz')

4 Ş
Ş 	If x is an array, sorts x in descending order; otherwise, sorts the stack in descending order

4 ⑴
⑴ 	Pushes an array consisting of x 1's (e.g., if x=3, then pushes [1,1,1]) ‡

4 ≥
≥ 	Is y>=x? † §§§

4 Ƥ
Ƥ 	Prints x, followed by a newline character

4 ɽ
ɽ 	Returns a random 32-bit integer ‡

4 ∨
∨ 	Bitwise OR †

4 ±
± 	If x>0, pushes 1; If x==0, pushes 0; If x<0, pushes -1 §

4 π

4 l

4 a

4 g

4 u

3 ɾ
ɾ 	Returns a random integer in the range [y,x) ‡ §§§

3 ṛ
ṛ 	Returns a random float in [0,1)

3 ½

3 ⁵
⁵ 	x^5 §

3 ₃
₃ 	x/3 §

3 Ḷ
Ḷ 	Returns the base-10 log of x §

3 ᒆ
ᒆ 	Pushes all permutations of x onto the stack as an array

3 ļ
ļ 	Returns the base-2 log of x §

3 ʊ
ʊ 	Returns the string containing the uppercase letters (i.e., 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')

3 ≤
≤ 	Is y<=x? † §§§

3 o

3 i

2 Ľ
Ľ 	Returns the base-x log of y † §§§

2 ÷
÷ 	Integer division of y by x † §§§

2 ↕
↕ 	If x is an array, returns [min(x),max(x)] ; otherwise, returns [min(stack),max(stack)]

2 ₅
₅ 	x/5 §

2 ʀ
ʀ 	If x is an array, returns a random element of x

2 ⎶
⎶ 	Returns the nearest integer to x §

2 ≡
≡ 	If x is an array, are all elements of x equal?; otherwise, are all of the elements on the stack equal?

2 ≠
≠ 	Is y!=x? † §§§

2 Ƨ
Ƨ 	If x is an array, every second element of x; otherwise, every second item on the stack

2 [

2 ]

2 (

2 )

2 y

2 c

2 ₄
₄ 	x/4 §

2 Ĺ
Ĺ 	Returns LCM(x,y) † ‡

2 Ž
Ž 	Interleaves the elements of x and y (e.g., if x=[x0,x1,x2] and y=[y0,y1,y2], returns [x0,y0,x1,y1,x2,y2])

2 ×
× 	Cartesian product of y and x

1 ¢
¢ 	Returns 1-x §

1 ⁶
⁶ 	x^6 §

1 ᵱ
ᵱ 	Returns the partition number of x § ‡

1 ⊽
⊽ 	Bitwise NOR †

1 ₀
₀ 	x/10 §

1 Ć
Ć 	Returns the xth Catalan number §

1 Ț
Ț 	Returns φ(x), where φ is Euler's totient function § ‡

1 ⁴
⁴ 	x^4 §

1 ³
³ 	x^3 §

1 ⊤
⊤ 	Returns the transpose of x if x is a matrix

1 ᑭ
ᑭ 	Returns the yth x-gonal number † ‡ §§§

1 U

1 R

1 L

1 ,

1 b

1 d

1 T

1 p

1 Ҏ
Ҏ 	Returns the product of the digits of x § ‡

1 ⁸
⁸ 	x^8 §

1 ɹ
ɹ 	Returns a random bit

1 ť
ť 	Returns tan(x) §

1 ҏ
ҏ 	Palindromizes x (e.g., if x="abe", returns "abeeba"; also, if x=[1,2,3], returns [1,2,3,3,2,1])

1 ₉
₉ 	x/9 §

1 ⊻
⊻ 	Bitwise XOR †

1 š
š 	Returns sin(x) §

1 Ť
Ť 	Returns tanh(x) §

== Appendix (copied from the wiki) ==

† If x is an array and y is not, returns [oper(x0,y), oper(x1,y), ...]. If y is an array and x is not, returns [oper(x,y0),oper(x,y1), ...]. If x and y are arrays, then returns [oper(x0,y0), oper(x1,y1), ..., oper(xk,yk)] where k=min(len(x),len(y)).

††Like †, but with x, y, and z.

§ If x is an array, returns [oper(x0),oper(x1),...].

§§ If y is an array, returns [oper(y0,x),oper(y1,x),...].

§§§ If x and y are arrays, returns [oper(x0,y0),oper(x1,y1),...].

§§§§ Like §§§, but with x, y, and z.

‡ Casts the inputs to integers if they are floats.
