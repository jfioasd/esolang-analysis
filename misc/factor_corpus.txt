1-graphs:
1471467 
151523 }
135441 {
105122 ]
101643 [
64213 ;
50453 )
49894 (
40668 --
33800 0
31218 :
28822 "
19946 the
18114 CONSTANT:
17384 unit-test
16704 1
15754 f
12477 a
10985 dup
10311 2
9659 of
9259 drop
9245 M:
9101 $link
7686 inline
7500 3
7315 HELP:
6950 to
6826 FUNCTION:
6769 T{
6495 $snippet
6420 t
6392 if
6134 swap
5950 $description
5855 is
5792 4
5627 $values
5517 and
5396 n
4968 USING:
4731 int
4630 dip
4607 bi
4546 +
4444 =
4362 get
4356 IN:
3934 in
3841 kernel
3628 string
3325 166
3285 5
3266 x
3244 with
3231 seq
3103 _
3091 sequences
3058 ?
3054 word
3046 sequence
2897 object
2826 for
2793 keep
2765 \
2676 length
2653 an
2623 be
2601 TUPLE:
2584 "."
2547 void
2524 10
2514 -
2488 '[
2466 or
2462 *
2417 0.0
2412 $subsections
2405 over
2398 V{
2384 are
2351 :>
2350 value
2343 "a
2334 when
2330 math
2291 not
2245 map
2221 CHAR:
2220 quot
2197 new
2145 first
2112 each
2103 ...
2068 H{
2059 1.0
2028 that
1989 ,
1988 from
1974 UINT
1945 accessors
1927 6
1916 ALIAS:
1875 by
1874 <
1865 b
1862 integer
1862 HRESULT
1836 set
1823 8
1822 TYPEDEF:
1811 ;"
1807 on
1796 "The
1778 nip
1727 class
1650 DWORD
1633 y
1614 as
1609 $nl
1606 can
1601 GENERIC:
1589 name
1589 ::
1554 7
1552 2drop
1532 void*
1530 clone
1451 x,
1448 make
1424 ",
1417 quotation
1410 words
1409 STRUCT:
1350 which
1346 path
1336 "USING:
1324 obj
1323 ARTICLE:
1298 call
1292 write
1286 ""
1286 it
1258 namespaces
1245 at
1234 tools.test
1233 boa
1231 gadget
1229 <PRIVATE
1229 -1
1225 PRIVATE>
1218 The
1216 255
1211 prettyprint
1182 $examples
1176 assoc
1170 number
1166 "a"
1153 type
1136 B{
1129 c
1121 arrays
1119 this
1115 SYMBOL:
1082 bi@
1068 $example
1066 2dip
1060 2array
1045 array
1044 str
1036 assocs
1031 2dup
1025 |
1018 will
1012 "seq"
1012 ."
 996 $code
 995 bi*
 989 dst
 984 %
 976 combinators
 962 "n"
 960 2.0
 958 100
 957 key
 951 16
 947 "{
 945 tri
 936 }"
 933 shift
 926 curry
 925 c-string
 924 D:
 908 help.markup
 906 9
 905 unless
 898 =>
 895 case
 894 data
 893 help.syntax
 881 20
 878 fixnum
 877 error
 873 values
 872 float
 860 "quot"
 859 11
 855 30
 854 ".
 853 src
 852 quot:
 851 "b"
 848 cond
 844 POSTPONE:
 843 nth
 827 2bi
 825 strings
 823 12
 823 $class-description
 819 $vocab-link
 817 print
 809 used
 809 parser
 805 stack
 796 00
 794 BOOL
 792 ERROR:
 785 uint
 782 code
 779 all
 775 i
 773 /
 770 vocabulary
 769 "A
 769 "This
 768 >
 764 one
 764 name>>
 762 ARM-INSTRUCTION:
 759 append
 758 pick
 756 if*
 752 alien
 750 second
 741 io
 735 $notes
 723 "x"
 715 z
 714 element
 711 stream
 704 Rn
 694 3.0
 691 input
 688 alien.c-types
 684 DIDFT_OPTIONAL
 682 slot
 676 ABOUT:
 672 HOOK:
 671 boolean
 669 ra
 661 [[
 650 result
 649 os
 649 DIDFT_BUTTON
 644 node
 636 compile-call
 636 rep
 634 given
 633 $
 628 byte-array
 627 ]]
 623 two
 622 15
 615 elt
 610 32
 610 system
 608 tuple
 602 d
 600 must-fail-with
 597 ##peek
 595 .
 591 use
 591 first2
 585 when*
 584 This
 582 cpu
 580 elements
 579 eq?
 577 timestamp
 574 using
 573 <iota>
 567 m
 565 like
 562 current
 562 C{
 560 into
 560 read
 559 must
 558 set-global
 558 GpStatus
 556 index
 555 If
 555 set-at
 554 file
 552 declare
 552 you
 547 have
 546 INTEGER
 545 member?
 543 should
 543 cleave
 540 insn
 538 v
 537 following
 537 has
 533 bitand
 533 matrix
 528 C:
 528 url
 526 size_t
 525 $see-also
 523 "an
 521 document
 519 "Outputs
 515 GUID_Key_malloced
 514 read-only
 513 DIDFT_MAKEINSTANCE
 512 effect
 510 generic
 510 tag
 506 rb
 504 image
 502 list
 501 push
 500 output
 500 string>number
 499 related-words
 496 token
 479 31
 477 A
 477 GLenum
 476 -1.0
 475 Factor
 473 "Creates
 472 utf8
 467 foo
 466 vector
 466 dest
 466 rt
 465 word-prop
 463 matches?
 459 X
 456 throw
 454 number>string
 453 quotations
 453 its
 453 size
 453 edge
 448 "?"
 448 random
 446 MOV
 444 math.parser
 443 vertex
 442 14
 440 real
 439 same
 437 sprintf
 436 get-global
 431 double
 430 DEFER:
 430 GL-FUNCTION:
 429 "c"
 428 13
 427 FLOAT
 426 binary
 423 does
 423 >string
 422 cr
 422 id
 421 INSTANCE:
 421 interval
 420 world
 419 C
 418 classes
 415 COLOR:
 415 then
 414 filter
 414 action
 412 where
 411 ascii
 407 neg
 405 end
 404 any
 402 @
 401 color
 401 target_addr
 400 buffer
 397 response
 394 $quotation
 393 times
 393 splitting
 393 1array
 393 prepend
 393 p
 392 only
 389 e
 387 ds-reg
 385 "IN:
 385 1&&
 383 loc
 382 int-rep
 381 Rt
 380 "foo"
 380 111
 379 must-fail
 379 version
 378 "y"
 377 dupd
 374 w
 374 outputs
 374 keys
 373 ..a
 373 call-next-method
 373 last
 370 objects
 370 face
 368 rot
 368 nl
 367 math.order
 366 empty?
 366 window
 362 handle
 360 sets
 358 than
 358 "Returns
 356 vocab
 355 "If
 355 bytes
 355 point
 354 initial:
 354 [|
 354 called
 354 prefix
 353 "Throws
 353 ##load-integer
 352 $[
 352 pathname
 350 no
 350 table
 349 slots
 349 pair
 348 call(
 347 60
 347 24
 345 nth-unsafe
 345 encoding
 344 >=
 343 4.0
 342 line
 341 concat
 341 bool
 340 literals
 339 C-TYPE:
 339 char
 339 combinators.short-circuit
 338 50
 337 block
 337 0x00
 336 time
 336 more
 336 flush
 334 <=
 334 INT
 333 -2
 333 continuations
 332 return
 332 event
 331 source
 329 method
 329 ->
 328 $emphasis
 327 alien.syntax
 327 bits
 326 byte-arrays
 325 $list
 325 GLint
 323 see
 323 21
 322 require
 322 handle>>
 321 request
 320 2^
 320 may
 319 MAIN:
 319 R/
 318 dim
 318 src1
 318 src2
 317 next
 315 ranges
 314 state
 313 text
 312 0.5
 311 all?
 310 ":"
 310 but
 309 value>>
 308 classes.struct
 308 bitor
 308 char*
 307 with-string-writer
 307 destructors
 305 key-down
 304 )"
 304 r
 304 count
 304 bottles
 303 $errors
 303 uchar
 302 "[
 302 string"
 301 if-empty
 300 io.files
 298 REAL
 298 vreg
 297 ..b
 297 vocabs
 297 eval(
 296 model
 295 ch
 295 find
 294 calendar
 294 17
 294 LPCSTR
 293 ${
 293 so
 293 3drop
 293 22
 292 <<
 292 >array
 292 40
 292 Rd
 291 suffix
 291 3array
 290 $var-description
 289 mod
 288 other
 287 SYNTAX:
 287 set-word-prop
 287 len
 286 summary
 286 64
 286 WM_USER
 285 63
 284 recursive
 284 11111
 284 COM-INTERFACE:
 283 fry
 282 ENUM:
 282 <ref>
 281 parse
 281 zero?
 280 s
 280 23
 279 after
 277 memory
 277 25
 276 >>
 276 user
 276 query
 275 also
 275 math.functions
 275 33
 274 cfg
 274 while
 274 $slot
 274 n/f
 274 returns
 273 with-variable
 272 we
 271 max
 271 process
 270 start
 269 PyObject*
 268 /i
 268 present
 266 g
 266 command
 264 containing
 264 header
 262 message
 262 thread
 262 dispose
 262 with-destructors
 261 assert=
 261 "d"
 261 label
 261 GLuint
 259 bignum
 259 out
 259 uchar*
 257 before
 257 test-bb
 256 It
 256 256
 255 up
 255 "path"
 255 Rs
 254 io.encodings.utf8
 254 0x66
 253 2keep
 253 b-edge
 253 ulong
 252 float-4{
 251 alien.data
 250 sq
 249 evx-insn
 248 deref
 248 help
 248 >fixnum
 248 editor
 247 $syntax
 247 x86
 247 xml
 247 v+
 247 cycles:
 246 port
 245 contains
 245 q
 245 cdecl
 245 INSTRUCTION:
 245 opcode:
 244 0xFD
 243 swapd
 243 width
 243 duration
 243 HANDLE
 243 opposite-edge
 242 SINGLETON:
 242 lines
 242 slice
 242 offset
 242 next-edge
 241 unless*
 241 calls
 241 $maybe
 241 map-as
 241 "/"
 241 seq'
 240 defined
 240 "obj"
 239 variable
 239 "value"
 239 io.pathnames
 239 server
 239 ##replace
 239 x-insn
 238 long
 237 literal
 237 between
 237 18
 237 compose
 237 28
 237 UINT32
 236 recover
 236 inputs
 236 19
 235 See
 235 locals
 234 instance
 234 run
 234 such
 234 format
 233 "the
 233 implements
 233 head
 232 2nip
 232 "class"
 232 rocksdb_options_t*
 231 definition
 231 calling
 230 uses
 230 with-compilation-unit
 230 "hello"
 229 search
 229 /f
 228 body
 228 rect
 227 M::
 227 "name"
 227 <regexp>
 227 board
 226 form
 225 PRIMITIVE:
 225 >bignum
 225 range
 225 members
 225 1000
 225 01
 225 params
 224 hashtable
 223 until
 222 set-nth
 222 they
 222 underlying>>
 222 do
 222 threads
 222 Y
 221 temp0
 220 200
 219 surround
 219 group
 219 ulonglong
 219 bb
 218 some
 218 $sequence
 218 tree
 218 ,,
 217 ":
 216 most
 216 "word"
 215 every
 215 function
 214 definitions
 214 true
 214 accum
 214 texture
 214 a,
 213 h
 212 TYPED:
 212 integer"
 212 $heading
 212 26
 212 left
 210 c-ptr
 210 math.vectors
 209 flags{
 209 sequences.private
 209 height
 209 128
 209 c-type
 208 MACRO:
 208 target
 208 hashtables
 208 options
 208 beer
 208 Display*
 207 colors
 207 lexer
 206 was
 206 types
 206 min
 206 Rm
 206 cpVect
 205 -3
 205 byte
 205 default
 205 [a,b]
 204 FROM:
 204 your
 204 $unchecked-example
 204 dim>>
 203 "1"
 203 graph
 202 temp
 201 top
 201 ##branch
 201 float-4-rep
 200 exemplar
 200 arg2
 199 single
 199 k
 199 sorting
 199 glue
 199 hash
 198 there
 198 SPECIALIZED-ARRAY:
 197 arg1,
 196 named
 196 their
 196 $contract
 196 X-FUNCTION:
 195 USE:
 195 123
 195 "string"
 195 append-path
 195 0xff
 194 HS{
 194 int*
 194 define
 194 level
 194 decode
 194 grouping
 193 vectors
 192 lookup-word
 192 pass
 192 reg
 191 <array>
 191 u
 191 row
 191 double-4{
 191 heap-size
 191 value-numbering-step
 190 foldable
 190 For
 190 specified
 190 address
 190 cell
 189 reverse
 189 "A"
 189 0x01
 188 newseq
 188 []
 187 being
 187 UNION:
 187 write1
 187 29
 186 passed
 186 "key"
 186 register
 186 "v"
 185 80
 184 PREDICATE:
 184 class-of
 184 any?
 184 27
 184 inlined?
 184 CHARACTER*1
 184 [+]
 183 URL"
 183 split
 183 match
 183 position
 183 "assoc"
 182 1/0.
 182 struct
 181 test
 181 parsing
 181 <=>
 181 class<=
 181 input-stream
 181 base
 180 rest
 180 fixnum+fast
 180 specialized-arrays
 180 1||
 179 LIBRARY:
 179 "An
 179 io.streams.string
 179 reduce
 179 ui.gadgets
 179 GLsizei
 178 tri*
 178 empty
 178 json
 178 instant
 178 2-operand-rm-sse
 177 entry
 177 title
 177 location
 177 DIDFT_ANYINSTANCE
 176 error>>
 176 now
 176 loop
 176 context
 176 n'/f
 176 HWND
 175 library
 175 windows
 174 assoc-each
 174 seq>>
 174 add-responder
 173 non-negative
 173 replicate
 173 change
 173 bitxor
 173 N
 173 naturals
 173 cpFloat
 172 style
 172 -4
 172 names
 172 sort
 172 ^
 172 regexp
 172 GLdouble
 171 provides
 171 output-stream
 171 mask
 171 seconds
 170 methods
 170 syntax
 170 complex
 170 48
 170 "m"
 170 "id"
 169 host
 169 underlying
 169 main
 169 child
 169 log
 168 set-nth-unsafe
 168 product
 168 math.bitwise
 167 sqrt
 167 kernel.private
 167 join
 167 #call
 166 sum
 166 "Calls
 166 example,
 166 vrt
 166 xo-insn
 166 PCSTR
 165 S{
 165 checksum-bytes
 165 XML
 164 sequence."
 164 split1
 164 alist
 164 55
 164 responder
 164 dummy_ptr,
 164 b,
 163 mode
 163 compiler.cfg.instructions
 163 PVOID
 163 PCWSTR
 162 implement
 162 shape
 162 class>>
 162 >integer
 162 be>
 161 compiler.units
 161 delete-at
 161 x>>
 161 checksum
 161 float-array{
 161 [XML
 161 sp
 161 rs
 160 word."
 160 "abc"
 160 "f"
 160 bl
 160 urls
 160 METHOD:
 159 "Tests
 159 between?
 159 heap
 159 been
 159 float+
 159 reach
 159 macosx?
 159 nodes
 159 vreg-use
 158 instances
 158 0x80
 158 protocol
 158 unless-empty
 158 XML]
 158 GUID:
 157 always
 157 l
 157 head?
 157 reject
 157 5.0
 157 59
 156 assoc-map
 156 n>>
 156 encode
 156 GML:
 156 ##load-reference
 156 vrb
 156 final-classes
 155 example
 155 <string-reader>
 155 either
 155 flags
 155 answer
 155 src1>>
 154 CALLBACK:
 154 "-"
 154 temp1
 153 yield
 152 files
 152 $strong
 152 def>>
 152 numbers
 152 B
 152 -8
 152 n'
 152 returned
 152 unix
 152 short
 152 WORD
 152 CODEGEN:
 151 initialize
 151 symbol
 151 order
 151 right
 151 without
 151 namespaces:set
 151 "exemplar"
 151 99
 151 error.
 151 rule
 151 self
 150 them
 150 windows?
 150 70
 150 button
 150 BYTE
 150 GpGraphics*
 149 ?tail
 149 pointer
 149 abs
 149 /mod
 149 1/2
 148 equal
 148 alpha
 148 item
 148 models
 147 multiline
 147 ("
 147 cc
 147 0x0f
 147 UINT*
 146 execute
 146 directory
 146 layouts
 146 first3
 146 L
 146 45
 146 ULONG
 145 SYMBOLS:
 145 52
 145 -5
 145 bit
 144 add
 144 "z"
 144 -rot
 144 ]"
 144 both
 144 contents
 144 49
 144 OpenGL
 144 info
 144 basic-block
 143 layout
 143 xb
 143 v-
 143 sequence-parser
 143 +vector+
 143 live-interval-state
 142 these
 142 2curry
 142 third
 142 ]=]
 142 lookup-c-type
 142 0x00000001
 141 j
 141 0x0
 141 tensor
 141 N,
 140 stored
 140 created
 140 \"
 140 pi
 140 ?head
 140 le>
 140 101
 140 GLfloat
 139 >boolean
 139 <range>
 139 effects
 139 need
 139 "(
 139 2tri
 139 "str"
 139 "To
 139 "bar"
 139 y>>
 139 frt
 138 array?
 138 string?
 138 results
 138 type>>
 138 <timestamp>
 137 $side-effects
 137 operation
 137 "p"
 137 variables
 137 with-scope
 137 rewrite
 137 formatting
 137 char**
 137 HTTP
 137 cons
 137 game
 137 Window
 137 use:
 136 >byte-array
 136 subseq
 136 map>assoc
 136 io.encodings.binary
 136 C-GLOBAL:
 136 hide
 136 status
 136 new-insn
 136 frb
 136 "rgbButtons"
 135 cannot
 135 database
 135 xt
 135 FLOAT*
 134 mapping
 134 must-infer
 134 operations
 134 >alist
 134 buf
 134 io.directories
 134 MEMO:
 134 vra
 133 bar
 133 "hi"
 133 program
 133 because
 133 str'
 133 execute(
 133 logic
 133 listener
 133 cells
 133 children>>
 133 cc=
 133 DWORD*
 132 parameters
 132 "For
 132 \"a\"
 132 42
 132 37
 132 2map
 132 src2>>
 132 def:
 132 literal:
 131 produce
 131 "g"
 131 seq1
 131 X,
 130 ~
 130 instead
 130 hashcode
 130 size>>
 130 read1
 130 off
 130 framebuffer
 129 "USE:
 129 scan-token
 129 #
 129 dst>>
 129 command-line
 129 ushort
 129 cpu.architecture
 128 perform
 128 how
 128 assoc-size
 128 io.encodings.ascii
 128 libc
 128 44
 128 callback
 128 font
 128 vreg>insn
 128 EAX
 127 ";"
 127 predicate
 127 36
 127 53
 127 tri@
 127 0x20
 127 timestamp'
 127 shape>>
 127 ##copy
 126 "Defines
 126 To
 126 seq2
 126 parent
 126 unicode
 126 >>dim
 126 SUBROUTINE:
 126 pDevice,
 125 tail
 125 infer
 125 "elt"
 125 args
 125 add-gadget
 125 op
 125 ROLE-TUPLE:
 125 __
 125 deque
 124 implementation
 124 contain
 124 instead."
 124 <byte-array>
 124 In
 124 io.encodings.string
 124 127
 124 target,
 123 3dip
 123 representation
 123 0x10
 123 printf
 123 >lower
 123 with-string-reader
 123 int-4-rep
 123 LVM_FIRST
 122 ")"
 122 3bi
 122 compiler
 122 corresponding
 122 $warning
 122 "t"
 122 set-value
 122 password
 121 GENERIC#:
 121 [a..b]
 121 initial
 121 value,
 121 110
 121 even?
 121 cut
 121 &dispose
 121 ppc
 121 41
 121 seq*
 121 PDWORD
 120 /*
 120 equivalent:"
 120 at*
 120 attributes
 120 try-process
 120 instruction
 120 (write-ptx-element)
 120 vx-insn
 120 IUnknown
 120 D3DXHANDLE
 120 LPD3DXBUFFER*
 120 in-d>>
 119 world"
 119 ")
 119 normalize-path
 119 file-exists?
 119 >float
 119 must-infer-as
 119 float*
 119 $url
 119 val
 119 json>
 119 link
 119 <date>
 118 "Sets
 118 whether
 118 support
 118 sequence"
 118 38
 118 35
 118 >url
 118 sm_20
 118 0%
 117 tail?
 117 take
 117 integer?
 117 34
 117 b-rep
 117 children
 117 Flags,
 117 LPCWSTR
 116 associated
 116 just
 116 create
 116 parse-stream
 116 vocabs.loader
 116 takes
 116 "Applies
 116 <slice>
 116 51
 116 57
 116 data>>
 116 ui
 116 display
 116 LONG
 116 lua_State*
 115 inside
 115 1quotation
 115 allows
 115 in>>
 115 add-library
 115 compiler.cfg
 115 win32-error=0/f
 115 FOLDABLE-INSN:
 114 $table
 114 $or
 114 56
 114 longlong
 114 0x00000002
 114 display,
 114 player
 113 length>>
 113 sleep
 113 section
 113 edges
 113 username
 113 CUresult
 113 USHORT
 112 character
 112 global
 112 parameter
 112 both?
 112 multiple
 112 RAX
 111 1234
 111 cache
 111 <reversed>
 111 spawn
 111 value."
 111 attr
 111 float-4
 111 mouse
 111 file-info
 110 */
 110 [let
 110 virtual
 110 "("
 110 if-zero
 110 "Adds
 110 characters
 110 "2"
 110 move
 110 54
 110 rgba
 110 type,
 110 options,
 110 cell_t
 110 out-d>>
 109 $error-description
 109 "In
 109 debugger
 109 unclip
 109 75
 109 cursor
 108 deprecated
 108 space
 108 root
 108 maybe{
 108 access
 108 with-directory
 108 alien.libraries
 108 "seq1"
 108 size_t*
 108 key>>
 108 cairo_t*
 108 LPDIRECT3DDEVICE9
 107 [1..b]
 107 sequence=
 107 registers
 107 "Constructs
 107 "+"
 107 90
 107 "gadget"
 107 F
 107 Jerry
 107 project-euler.common
 106 key?
 106 standard
 106 since
 106 unix?
 106 union
 106 "w"
 106 0x02
 106 math.matrices
 106 windows.types
 105 MIXIN:
 105 -10
 105 classes.tuple
 105 already
 105 ch/f
 105 images
 105 specifier"
 105 instance?
 105 same?
 105 key,
 105 quot'
 105 stream-write
 105 rows
 105 day
 105 field
 105 track-add
 104 whose
 104 way
 104 indicates
 104 endian
 104 recip
 104 year
 104 foreground
 104 y,
 104 SOLUTION:
 104 vm-reg
 103 "asdf"
 103 word,
 103 another
 103 \s
 103 adjoin
 103 prepose
 103 client
 103 HDEVINFO
 102 unparse
 102 three
 102 2cleave
 102 "B"
 102 "i"
 102 ","
 102 400
 102 "u"
 102 around,
 102 SIMD
 101 "object"
 101 eval
 101 points
 101 ?nth
 101 col
 101 39
 101 index,
 101 "matrix"
 101 db
 101 profile
 101 v*
 101 ptr
 101 wall,
 101 double-2-rep
 101 double-rep
 101 ##inc
 100 vocabularies
 100 about
 100 "s"
 100 environment
 100 diff
 100 2over
 100 simple
 100 each-index
 100 T
 100 pprint*
 100 Take
 100 "graph
 100 beer.
 100 down,
 100 wall.
 100 instructions>>
 100 pname,
  99 object"
  99 old
  99 1.5
  99 copy
  99 paths
  99 a>>
  99 indices
  99 stream>>
  99 generalizations
  99 statement
  98 harvest
  98 blocks
  98 car
  98 blue
  98 split-lines
  98 pairs
  98 each-integer
  98 "s
  98 46
  98 0xffffffff
  98 v*n
  98 uniform
  97 name"
  97 "\n"
  97 back
  97 map-reduce
  97 zip
  97 "h"
  97 "url"
  97 errptr
  97 Flags
  97 L{
  97 float-rep
  97 reps
  96 part
  96 3append
  96 member-eq?
  96 generated
  96 column
  96 77
  96 pointer:
  96 path>>
  96 obj1
  96 obj2
  96 track
  96 0x04
  96 timeout
  96 LPVOID
  95 When
  95 spread
  95 double>bits
  95 6.0
  95 0x03
  95 send
  95 win
  95 <dlist>
  95 pprint-word
  95 L,
  95 cell-size
  94 what
  94 stack."
  94 string,
  94 "Converts
  94 must-not-fail
  94 error."
  94 "T{
  94 "}"
  94 specialized
  94 <displaced-alien>
  94 "0"
  94 checksums
  94 "seq2"
  94 >be
  94 pos
  94 URL
  94 scratch-reg
  93 from>>
  93 is,
  93 information
  93 dynamic
  93 forget
  93 >>name
  93 control
  93 available
  93 You
  93 check
  93 "newseq"
  93 stream"
  93 zero
  93 interface
  93 bitnot
  93 continuation
  93 "q"
  93 58
  93 blank?
  93 define-core-syntax
  93 model>>
  93 memory>struct
  93 04
  93 compiler.tree
  92 errors
  92 ";
  92 depth
  92 <alien>
  92 disposable
  92 bit?
  92 0/0.
  92 43
  92 4array
  92 generator
  92 47
  92 shader
  92 vec>>
  92 rep>>
  92 temp2
  92 DeviceInfoSet,
  91 "["
  91 name,
  91 io.backend
  91 reference
  91 least
  91 passing
  91 items
  91 0.25
  91 combinators.smart
  91 0x40
  91 n*v
  91 render
  91 0x00000004
  91 SIZE_T
  91 convert-farkup
  90 red
  90 0.1
  90 "]"
  90 equivalent
  90 $slots
  90 stream-read1
  90 file-contents
  90 id>>
  90 dispatch
  90 65
  90 device
  90 with-out-parameters
  90 Nibbles
  90 regular
  90 audio
  90 compiler.cfg.registers
  90 C+
  90 gc-map
  90 pDesc
  89 with-variables
  89 pad-head
  89 added
  89 round
  89 authentication
  89 LD
  89 ##set-slot-imm
  88 known
  88 word>>
  88 integers"
  88 1024
  88 collection
  88 lookup-vocab
  88 102
  88 2/
  88 local
  88 vertices
  88 month
  88 <groups>
  88 env
  88 "Prints
  88 jit-load-cell
  87 ?{
  87 above
  87 User
  87 ?unless
  87 positive
  87 alien.strings
  87 would
  87 object."
  87 map-sum
  87 odd?
  87 ">"
  87 with-disposal
  87 "1
  87 67
  87 bootstrap-cells
  87 97
  87 98
  87 attribute
  87 io.styles
  87 mailbox
  87 <gadget>
  87 article
  87 instructions
  87 APPLICATION_ERROR_MASK
  87 ERROR_SEVERITY_ERROR
  86 3dup
  86 useful
  86 wrapper
  86 different
  86 starting
  86 rules
  86 stack,
  86 original
  86 >c-ptr
  86 alien-callback
  86 identity
  86 prev
  86 76
  86 pref-dim
  86 uint64_t
  86 time+
  86 read-response
  86 Tom
  86 HINF
  85 QUALIFIED-WITH:
  85 sequence,
  85 sift
  85 in?
  85 written
  85 filename
  85 69
  85 72
  85 cdr
  85 dlist
  85 spill-slot
  84 "When
  84 final
  84 slots:"
  84 "vocab"
  84 compare
  84 ?at
  84 delete
  84 representing
  84 possible
  84 "stream"
  84 with-file-reader
  84 &free
  84 UI
  84 usage
  84 i1
  84 i2
  84 param
  84 timer
  84 markup
  84 c:int
  84 fd
  84 take-char
  84 socket
  84 imm
  84 GLfloat*
  84 imm9
  83 thrown
  83 finally
  83 writing
  83 entries
  83 compile
  83 shuffle
  83 out>>
  83 10.0
  83 grid
  83 e1
  83 ];
  83 opcode
  83 108
  83 2019
  83 ADD
  83 blas-vector-base
  83 ALPHA,
  83 REAL(*)
  83 GLdouble*
  83 rx
  83 short-8-rep
  82 (see
  82 satisfy
  82 push-all
  82 full
  82 vocabs.parser
  82 file-name
  82 less
  82 A,
  82 resulting
  82 num
  82 >hex
  82 elt1
  82 elt2
  82 to>>
  82 pack
  82 05
  82 typedef
  82 S1
  82 S2
  81 ?first
  81 \n
  81 begin
  81 create-word
  81 "There
  81 sin
  81 vocab-name
  81 beginning
  81 equal?
  81 "hello
  81 300
  81 tail-slice
  81 120
  81 null
  81 "from"
  81 selector
  81 73
  81 io.sockets
  81 io.files.temp
  81 ui.gestures
  81 SUB
  81 mouseo
  81 DOUBLE-PRECISION(*)
  81 COMPLEX(*)
  81 DOUBLE-COMPLEX(*)
  81 location,
  81 0x7fffffff
  81 ctx-reg
  81 HMODULE
  81 live-interval
  80 H
  80 "Thrown
  80 counter
  80 many
  80 optional
  80 flag
  80 readln
  80 number=
  80 0xFF
  80 -16
  80 component
  80 -1/0.
  80 61
  80 239
  80 <repetition>
  80 "3"
  80 lists
  80 delta
  80 vdot
  80 ui.gadgets.worlds
  80 insert-tuple
  80 -0700"
  80 resolver
  80 Bool
  79 init
  79 word.
  79 found
  79 -6
  79 head-slice
  79 defines
  79 clear-assoc
  79 "Reads
  79 "alien"
  79 stack.
  79 owner
  79 macosx
  79 trim
  79 tools.deploy.config
  79 http.client
  79 io.launcher
  79 <c-direct-array>
  79 s,
  79 pane
  78 hashcode*
  78 declared
  78 integers
  78 "\""
  78 open
  78 "TUPLE:
  78 ratio
  78 flip
  78 close
  78 alien>string
  78 align
  78 254
  78 box
  78 [=[
  78 count,
  78 arch
  78 WINDOW*
  78 bf
  78 c,
  78 CFSTRING:
  78 UPLO,
  78 doc
  78 turtle
  78 ];"
  78 compiler.cfg.utilities
  78 GLint*
  78 interactor
  78 "i1"
  78 PSP_DEVINFO_DATA
  77 superclass
  77 tool
  77 define-declared
  77 scope
  77 work
  77 "Hello
  77 with-byte-reader
  77 "to"
  77 88
  77 relayout-1
  77 ubyte-components
  77 ctx
  77 BOOLEAN
  77 011
  76 word?
  76 o
  76 together
  76 "e"
  76 throws
  76 maximum
  76 normalize
  76 allocated
  76 x86.64
  76 62
  76 "graph"
  76 topic
  76 <struct>
  76 deploy-ui?
  76 deploy-reflection
  76 content
  76 loc>>
  76 pool
  76 .f32
  76 TCBDB*
  76 push-back
  76 000
  76 addrspec
  76 literal>>
  75 D
  75 during
  75 existing
  75 xa
  75 +lt+
  75 want
  75 string>>
  75 rs-reg
  75 constructed
  75 obj>>
  75 matrix4
  75 deploy-io
  75 DECIMAL:
  75 <inet4>
  75 temp-file
  75 105
  75 undo
  75 LPCTSTR
  75 any-rep
  75 "i2"
  75 Status
  75 ID3D10Blob**
  74 step
  74 running
  74 greater
  74 page
  74 holding
  74 scale
  74 tag-bits
  74 type-number
  74 represents
  74 receive
  74 left>>
  74 0x38
  74 deploy-name
  74 graphviz
  74 DESTRUCTOR:
  74 cl_uint
  74 cpBody*
  74 LPDWORD
  74 live
  73 QUALIFIED:
  73 directly
  73 remove
  73 basic
  73 math.private
  73 store
  73 \"b\"
  73 2each
  73 wrap
  73 file-lines
  73 arguments
  73 pop
  73 "C"
  73 bootstrap-cell
  73 newelt
  73 "2.0"
  73 "title"
  73 minutes
  73 coverage
  73 idx
  73 dispatch-message
  73 Count
  73 ##phi
  73 EBNF[=[
  73 build-tree
  73 BOOL*
  73 GpPen*
  72 TYPED::
  72 SBUF"
  72 documentation
  72 words:"
  72 make-foldable
  72 def
  72 10000
  72 hex>
  72 exception
  72 frame
  72 quotation,
  72 session
  72 comparison
  72 Z
  72 2&&
  72 cos
  72 sequences.extras
  72 >c-array
  72 ones
  72 gml
  72 define-persistent
  72 ast
  72 monitor
  72 int-regs
  72 GpPath*
  72 GLshort
  71 comment
  71 SINGLETONS:
  71 interleave
  71 ")."
  71 "slots"
  71 vocabulary."
  71 gc
  71 otherwise
  71 "parser"
  71 could
  71 required
  71 "array"
  71 stdcall
  71 generate
  71 object.
  71 template
