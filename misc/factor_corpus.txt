1-graphs:
1541149 
153545 }
137201 {
106864 ]
103331 [
65629 ;
51469 )
50903 (
41089 --
34324 0
32124 :
28984 "
26288 !
23385 the
18508 CONSTANT:
17571 unit-test
17363 1
16081 f
14120 a
11209 of
11189 dup
10713 2
9546 drop
9294 M:
9270 FUNCTION:
9177 $link
8438 to
7820 inline
7736 3
7354 HELP:
7192 is
6845 T{
6837 if
6674 and
6534 $snippet
6507 t
6435 for
6255 swap
5988 4
5957 $description
5658 n
5629 $values
5162 int
5128 =
5065 +
4972 USING:
4855 in
4701 dip
4655 bi
4492 get
4357 IN:
3848 kernel
3778 with
3711 string
3418 5
3362 x
3326 166
3325 seq
3263 *
3188 word
3179 sequence
3157 _
3123 be
3114 sequences
3093 ?
3089 See
3075 an
2985 object
2965 -
2876 Copyright
2875 are
2867 void
2860 keep
2836 BSD
2831 \
2814 https://factorcode.org/license.txt
2780 length
2759 or
2690 (C)
2664 not
2612 10
2608 TUPLE:
2598 "."
2588 that
2560 :>
2557 value
2531 '[
2528 license.
2481 when
2473 over
2433 0.0
2432 V{
2414 $subsections
2398 from
2351 "a
2347 math
2332 new
2323 first
2316 CHAR:
2295 on
2290 map
2269 ...
2262 quot
2230 each
2219 by
2112 H{
2083 ,
2079 1.0
2017 6
1977 UINT
1973 set
1968 b
1953 accessors
1929 <
1926 8
1921 ALIAS:
1909 integer
1904 as
1874 HRESULT
1837 TYPEDEF:
1829 ;"
1825 can
1813 nip
1803 "The
1776 class
1711 y
1674 DWORD
1673 The
1650 7
1646 name
1615 ::
1613 GENERIC:
1612 void*
1609 $nl
1601 it
1592 clone
1569 2drop
1526 which
1523 make
1494 words
1460 x,
1460 quotation
1433 call
1433 ",
1424 this
1416 STRUCT:
1399 at
1398 number
1394 path
1365 write
1344 "USING:
1343 obj
1323 ARTICLE:
1307 ""
1262 -1
1261 namespaces
1256 gadget
1254 255
1246 boa
1241 type
1234 tools.test
1234 assoc
1230 <PRIVATE
1225 PRIVATE>
1225 |
1221 prettyprint
1184 $examples
1174 "a"
1170 c
1160 B{
1149 arrays
1129 SYMBOL:
1121 array
1118 will
1106 c-string
1102 bi@
1083 2dip
1081 float
1080 $example
1080 2array
1075 100
1053 key
1051 str
1048 data
1038 2dup
1036 assocs
1024 ."
1013 "seq"
1012 dst
1005 bi*
1003 $code
1003 16
 989 %
 987 combinators
 978 stack
 975 shift
 969 =>
 968 9
 968 values
 964 all
 964 "n"
 963 error
 963 case
 962 2.0
 954 "{
 951 tri
 945 curry
 943 }"
 934 Slava
 934 unless
 931 D:
 929 one
 913 20
 908 help.markup
 906 used
 894 parser
 893 help.syntax
 892 fixnum
 891 code
 886 quot:
 881 11
 878 nth
 867 30
 866 print
 863 12
 863 src
 860 /
 860 "quot"
 859 cond
 856 ".
 855 strings
 853 "b"
 849 POSTPONE:
 846 i
 832 2bi
 829 >
 829 $class-description
 822 uint
 820 $vocab-link
 807 BOOL
 804 00
 794 input
 792 ERROR:
 791 second
 789 name>>
 776 vocabulary
 775 "A
 774 Pestov.
 773 pick
 773 2009
 771 "This
 767 append
 766 element
 766 stream
 762 This
 762 if*
 762 ARM-INSTRUCTION:
 758 alien
 742 io
 739 should
 737 $notes
 733 two
 728 z
 727 "x"
 721 If
 712 into
 710 [[
 707 use
 706 have
 706 Rn
 704 slot
 703 result
 701 given
 696 3.0
 690 alien.c-types
 684 boolean
 684 DIDFT_OPTIONAL
 676 ABOUT:
 674 node
 673 using
 672 HOOK:
 670 file
 669 ra
 663 ]]
 652 os
 652 15
 651 $
 649 DIDFT_BUTTON
 643 must
 642 has
 640 tuple
 640 A
 640 system
 639 32
 638 compile-call
 638 elt
 637 rep
 634 elements
 633 byte-array
 629 like
 626 .
 626 index
 625 d
 625 FUNCTION-ALIAS:
 624 2010
 615 you
 611 image
 609 current
 606 must-fail-with
 604 cpu
 602 m
 602 ##peek
 599 matrix
 597 Doug
 596 first2
 593 read
 590 when*
 588 following
 587 eq?
 585 <iota>
 583 tag
 581 we
 580 timestamp
 577 output
 570 document
 568 MOV
 562 set-global
 562 member?
 562 C{
 558 set-at
 558 GpStatus
 556 declare
 552 list
 552 bitand
 549 v
 549 INTEGER
 547 cleave
 546 size_t
 545 its
 541 insn
 539 same
 538 Coleman.
 537 2008
 536 push
 533 url
 532 then
 531 effect
 531 C:
 528 generic
 528 only
 527 $see-also
 526 color
 523 "an
 519 "Outputs
 519 size
 517 token
 516 read-only
 515 GUID_Key_malloced
 513 related-words
 513 X
 513 DIDFT_MAKEINSTANCE
 509 Factor
 506 rb
 503 foo
 503 string>number
 502 any
 502 throw
 499 31
 498 vector
 496 time
 495 GLenum
 488 random
 486 where
 486 utf8
 484 but
 478 -1.0
 474 "Creates
 471 does
 468 matches?
 468 dest
 467 14
 467 ds-reg
 466 C
 466 word-prop
 466 rt
 462 vertex
 460 edge
 458 number>string
 456 real
 456 quotations
 455 binary
 454 13
 450 end
 450 "?"
 450 than
 449 classes
 448 double
 447 id
 446 no
 445 math.parser
 442 get-global
 440 so
 439 sprintf
 438 DEFER:
 438 interval
 437 >string
 437 buffer
 437 ->
 435 last
 435 return
 432 "c"
 430 world
 430 GL-FUNCTION:
 427 FLOAT
 426 INSTANCE:
 425 filter
 425 bool
 423 cr
 423 action
 422 version
 420 times
 419 COLOR:
 419 neg
 418 window
 417 point
 415 p
 414 @
 414 text
 413 ascii
 406 handle
 401 more
 401 bytes
 401 1array
 401 keys
 401 target_addr
 399 response
 398 prepend
 397 e
 395 must-fail
 395 splitting
 394 outputs
 394 $quotation
 394 event
 393 line
 393 called
 390 objects
 390 "foo"
 388 "IN:
 388 loc
 388 table
 387 1&&
 385 int-rep
 384 111
 382 dupd
 381 w
 381 "y"
 381 bits
 381 Rt
 379 call-next-method
 376 rot
 376 >=
 374 empty?
 373 ..a
 373 24
 372 run
 371 [|
 371 block
 371 nl
 371 face
 368 next
 368 may
 368 pair
 367 math.order
 367 method
 367 encoding
 366 vocab
 366 prefix
 364 sets
 363 char
 362 slots
 362 see
 362 "If
 360 ##load-integer
 358 initial:
 358 "Returns
 358 <=
 357 nth-unsafe
 355 call(
 355 60
 354 state
 354 concat
 353 literals
 353 $[
 353 "Throws
 353 pathname
 350 flush
 348 other
 347 21
 347 50
 347 GLint
 345 source
 344 SYNTAX:
 344 4.0
 343 char*
 342 up
 342 after
 342 count
 341 0x00
 339 R/
 339 C-TYPE:
 339 find
 339 combinators.short-circuit
 338 request
 337 continuations
 336 INT
 335 -2
 333 returns
 333 John
 332 <<
 332 require
 331 $emphasis
 331 out
 329 2^
 328 also
 327 alien.syntax
 327 byte-arrays
 325 $list
 324 r
 324 handle>>
 323 It
 322 ranges
 321 bitor
 321 mod
 321 dim
 319 MAIN:
 319 17
 318 test
 318 parse
 318 0.5
 318 src1
 318 src2
 316 ":"
 316 model
 315 memory
 315 all?
 312 >>
 312 function
 311 user
 311 40
 311 with-string-writer
 310 value>>
 309 classes.struct
 309 )"
 309 destructors
 309 license
 307 ${
 307 22
 307 uchar
 306 vocabs
 306 "[
 306 key-down
 306 vreg
 304 $errors
 304 ch
 304 string"
 304 bottles
 303 start
 303 eval(
 301 if-empty
 301 before
 301 between
 300 io.files
 300 64
 299 23
 299 REAL
 298 suffix
 298 len
 297 ..b
 297 >array
 297 while
 296 3drop
 296 calendar
 296 process
 295 $var-description
 295 defined
 295 recursive
 295 containing
 295 s
 294 do
 294 zero?
 294 63
 294 LPCSTR
 293 33
 293 Rd
 292 max
 292 3array
 292 header
 290 For
 290 25
 289 <ref>
 289 message
 288 fry
 287 set-word-prop
 286 summary
 286 WM_USER
 285 g
 285 some
 284 11111
 284 COM-INTERFACE:
 282 ENUM:
 282 thread
 282 query
 282 temp0
 281 /i
 280 contains
 280 left
 279 offset
 278 such
 277 */
 277 was
 277 cfg
 277 with-variable
 277 present
 277 Benediktsson
 275 calls
 275 math.functions
 275 command
 275 there
 275 n/f
 274 numbers
 274 $slot
 272 uchar*
 271 q
 271 inputs
 269 256
 269 PyObject*
 269 __
 268 they
 268 every
 268 assert=
 267 bignum
 267 width
 266 byte
 265 default
 265 dispose
 263 "d"
 263 with-destructors
 263 label
 262 variable
 262 sum
 262 GLuint
 261 uses
 261 form
 261 format
 261 server
 260 2keep
 260 port
 259 sq
 259 texture
 258 long
 257 until
 257 test-bb
 256 range
 256 "path"
 256 position
 255 lines
 255 Y
 255 Rs
 254 literal
 254 io.encodings.utf8
 254 row
 254 x86
 254 0x66
 254 ulong
 253 help
 253 slice
 253 28
 253 float-4{
 253 b-edge
 252 $syntax
 252 HANDLE
 251 definition
 251 >fixnum
 251 alien.data
 251 editor
 251 v+
 250 true
 250 19
 249 deref
 249 swapd
 249 evx-insn
 248 xml
 248 cycles:
 247 18
 247 locals
 247 cdecl
 246 register
 246 duration
 246 INSTRUCTION:
 246 opcode:
 245 types
 244 calling
 244 map-as
 244 0xFD
 244 board
 243 SINGLETON:
 243 "/"
 243 opposite-edge
 242 unless*
 242 top
 242 head
 242 search
 242 seq'
 242 next-edge
 241 most
 241 $maybe
 241 "hello"
 240 instance
 240 "obj"
 240 compose
 239 "value"
 239 recover
 239 tree
 239 io.pathnames
 239 ##replace
 239 x-insn
 238 1000
 238 []
 237 right
 237 implements
 237 UINT32
 236 hashtable
 235 body
 235 suffix!
 235 <regexp>
 234 2008,
 234 their
 234 pointer
 234 /f
 234 group
 234 params
 233 "the
 233 2nip
 233 height
 233 cell
 232 "class"
 232 rocksdb_options_t*
 232 [+]
 231 members
 231 with-compilation-unit
 231 rect
 230 HS{
 230 "name"
 230 threads
 230 Joe
 230 01
 229 definitions
 229 set-nth
 228 M::
 228 >bignum
 228 accum
 228 200
 228 base
 227 underlying>>
 227 empty
 225 h
 225 PRIMITIVE:
 225 colors
 225 being
 225 because
 225 k
 225 26
 225 a,
 223 int*
 223 ":
 223 bit
 223 options
 222 your
 222 surround
 222 ulonglong
 222 bb
 221 target
 221 single
 220 specified
 220 address
 219 bitxor
 218 $sequence
 218 ,,
 218 context
 217 pass
 216 "word"
 216 min
 215 lexer
 214 $heading
 214 128
 214 struct
 213 c-ptr
 213 integer"
 212 TYPED:
 212 hashtables
 211 flags{
 211 -3
 211 define
 211 example,
 211 hash
 210 math.vectors
 210 c-type
 210 arg2
 210 beer
 209 MACRO:
 209 sequences.private
 209 always
 209 temp
 208 Display*
 207 level
 207 [a,b]
 206 parsing
 206 need
 206 Rm
 206 cpVect
 205 FROM:
 205 reverse
 205 $unchecked-example
 205 29
 204 USE:
 204 (c)
 204 graph
 204 dim>>
 204 Color
 203 sorting
 203 glue
 203 "1"
 202 match
 201 0xff
 201 vectors
 201 passed
 201 shape
 201 location
 201 exemplar
 201 button
 201 ##branch
 201 float-4-rep
 200 protocol
 200 order
 200 "string"
 200 now
 200 these
 199 change
 199 named
 199 been
 199 without
 199 decode
 199 loop
 198 <array>
 198 entry
 198 SPECIALIZED-ARRAY:
 198 arg1,
 197 123
 197 methods
 197 mode
 197 append-path
 197 N
 196 style
 196 reduce
 196 $contract
 196 grouping
 196 80
 196 reg
 196 X-FUNCTION:
 195 <=>
 195 both
 195 flags
 195 27
 194 foldable
 194 split
 194 example
 194 u
 193 lookup-word
 193 S{
 192 "A"
 192 product
 192 0x01
 192 heap-size
 191 write1
 191 double-4{
 191 value-numbering-step
 191 GLsizei
 190 syntax
 190 sort
 190 them
 190 newseq
 189 parameters
 189 library
 189 In
 188 URL"
 188 class-of
 188 "key"
 188 inlined?
 187 1/0.
 187 rest
 187 UNION:
 187 log
 186 add
 186 "v"
 185 PREDICATE:
 185 windows
 185 mask
 185 tensor
 184 any?
 184 title
 184 "assoc"
 184 error.
 184 CHARACTER*1
 183 j
 183 names
 183 equal
 183 1||
 183 checksum-bytes
 182 class<=
 182 seq>>
 182 input-stream
 182 48
 182 HWND
 181 fixnum+fast
 181 tri*
 181 ^
 180 Groff.
 180 specialized-arrays
 180 instant
 180 dummy_ptr,
 179 LIBRARY:
 179 "An
 179 io.streams.string
 179 alpha
 179 2011
 179 seconds
 179 json
 179 ui.gadgets
 178 complex
 178 Daniel
 178 GLdouble
 178 temp1
 178 2-operand-rm-sse
 177 heap
 177 regexp
 177 DIDFT_ANYINSTANCE
 176 -4
 176 assoc-each
 176 error>>
 176 either
 176 child
 176 n'/f
 175 B
 175 55
 175 sp
 174 non-negative
 174 replicate
 174 returned
 174 item
 174 add-responder
 174 b,
 174 naturals
 173 implement
 173 host
 173 main
 173 "f"
 173 output-stream
 173 XML
 173 cpFloat
 172 underlying
 172 between?
 172 nodes
 171 files
 171 0x80
 171 join
 171 provides
 171 "m"
 170 set-nth-unsafe
 170 directory
 170 "id"
 170 rs
 169 sqrt
 169 We
 169 mapping
 168 x>>
 168 L
 168 math.bitwise
 168 OpenGL
 168 PCSTR
 168 #call
 167 kernel.private
 167 instances
 167 checksum
 167 rule
 167 reach
 166 just
 166 "Calls
 166 sequence."
 166 encode
 166 >integer
 166 responder
 166 answer
 166 vrt
 166 xo-insn
 165 l
 165 alist
 165 contents
 164 since
 164 split1
 164 be>
 164 compiler.cfg.instructions
 163 delete-at
 163 head?
 163 59
 163 70
 163 instruction
 163 PVOID
 163 PCWSTR
 162 assoc-map
 162 class>>
 162 reject
 162 /mod
 162 [XML
 161 compiler.units
 161 cannot
 161 bl
 161 -8
 161 urls
 161 float-array{
 160 symbol
 160 word."
 160 program
 160 "abc"
 160 check
 160 Test
 160 macosx?
 160 info
 160 METHOD:
 160 GUID:
 159 "Tests
 159 operations
 159 unless-empty
 159 float+
 159 vreg-use
 158 status
 158 99
 158 "-"
 158 short
 158 XML]
 158 font
 158 Window
 158 ##load-reference
 157 initialize
 157 5.0
 156 yield
 156 results
 156 n>>
 156 52
 156 GML:
 156 vrb
 156 final-classes
 155 <string-reader>
 155 how
 155 CALLBACK:
 155 src1>>
 154 1/2
 154 $strong
 154 abs
 154 n'
 154 45
 153 produce
 153 created
 153 def>>
 153 ("
 153 unix
 153 49
 153 self
 153 BYTE
 152 instead
 152 windows?
 152 WORD
 152 CODEGEN:
 151 ?tail
 151 namespaces:set
 151 parameter
 151 "exemplar"
 151 -5
 151 cells
 150 effects
 150 layouts
 150 off
 150 GpGraphics*
 149 \"
 149 contain
 149 space
 149 -rot
 149 logic
 149 2curry
 149 callback
 149 #
 149 0x0f
 148 multiline
 148 third
 148 functions
 148 execute
 148 ]"
 148 registers
 148 layout
 148 variables
 148 models
 148 mouse
 148 /**
 147 character
 147 first3
 147 cc
 147 UINT*
 146 stored
 146 operation
 146 would
 146 ]=]
 146 0x00000001
 146 ULONG
 145 SYMBOLS:
 145 take
 145 v-
 145 database
 145 Load
 144 bar
 144 alias
 144 "z"
 144 sequence-parser
 144 basic-block
 143 support
 143 pi
 143 xb
 143 char**
 143 +vector+
 143 live-interval-state
 142 corresponding
 142 implementation
 142 inside
 142 y>>
 142 multiple
 142 42
 142 ?head
 142 101
 142 lookup-c-type
 141 <range>
 141 already
 141 2tri
 141 scan-token
 141 formatting
 141 0x0
 141 2012
 141 <timestamp>
 141 N,
 140 initial
 140 "(
 140 string?
 140 36
 140 37
 140 rewrite
 140 type>>
 140 le>
 140 game
 140 GLfloat
 139 >boolean
 139 array?
 139 characters
 139 "str"
 139 "To
 139 "bar"
 139 hide
 139 HTTP
 139 frt
 138 compiler
 138 >byte-array
 138 "p"
 138 buf
 138 44
 138 53
 138 41
 137 $side-effects
 137 subseq
 137 map>assoc
 137 representation
 137 with-scope
 137 MEMO:
 137 cons
 137 use:
 136 /*
 136 unicode
 136 ~
 136 hashcode
 136 create
 136 cache
 136 execute(
 136 seq1
 136 io.encodings.binary
 136 C-GLOBAL:
 136 listener
 136 >lower
 136 player
 136 new-insn
 136 frb
 136 DWORD*
 136 "rgbButtons"
 135 "hi"
 135 tail
 135 three
 135 value,
 135 children>>
 135 Get
 135 xt
 135 FLOAT*
 134 don't
 134 points
 134 To
 134 "USE:
 134 must-infer
 134 control
 134 predicate
 134 move
 134 assoc-size
 134 >alist
 134 io.directories
 134 2map
 134 vra
 133 str'
 133 parent
 133 X,
 133 cc=
 132 "For
 132 many
 132 \"a\"
 132 takes
 132 read1
 132 object.
 132 0x20
 132 framebuffer
 132 src2>>
 132 def:
 132 literal:
 131 global
 131 "g"
 131 section
 131 target,
 131 0x10
 131 cursor
 131 ##copy
 130 perform
 130 size>>
 130 args
 130 command-line
 130 ushort
 130 display
 130 link
 130 EAX
 129 ";"
 129 infer
 129 35
 129 dst>>
 129 password
 129 cpu.architecture
 128 associated
 128 back
 128 seq2
 128 col
 128 io.encodings.ascii
 128 libc
 128 access
 128 shape>>
 128 vreg>insn
 127 GENERIC#:
 127 ")"
 127 whether
 127 positive
 127 2005,
 127 attributes
 127 cut
 127 tri@
 127 34
 127 val
 127 timestamp'
 127 instructions
 126 "Defines
 126 "t"
 126 <byte-array>
 126 2007,
 126 copy
 126 even?
 126 127
 126 float*
 126 38
 126 printf
 126 add-gadget
 126 >>dim
 126 op
 126 SUBROUTINE:
 126 vm-reg
 126 pDevice,
 125 [a..b]
 125 $warning
 125 work
 125 starting
 125 "elt"
 125 ROLE-TUPLE:
 125 deque
 125 RAX
 124 part
 124 instead."
 124 110
 124 io.encodings.string
 124 with-string-reader
 124 ms
 124 children
 124 LVM_FIRST
 123 3bi
 123 way
 123 another
 123 at*
 123 3dip
 123 flag
 123 51
 123 57
 123 set-value
 123 int-4-rep
 122 root
 122 different
 122 allows
 122 sleep
 122 56
 122 Set
 122 ppc
 122 seq*
 122 SIMD
 121 old
 121 world"
 121 normalize-path
 121 integer?
 121 &dispose
 121 json>
 121 PDWORD
 120 >url
 120 what
 120 equivalent:"
 120 found
 120 54
 120 type,
 120 try-process
 120 F
 120 (write-ptx-element)
 120 vx-insn
 120 IUnknown
 120 D3DXHANDLE
 120 LPD3DXBUFFER*
 120 in-d>>
 119 ")
 119 file-exists?
 119 >float
 119 must-infer-as
 119 $url
 119 b-rep
 119 <date>
 119 lua_State*
 118 tail?
 118 "Sets
 118 sure
 118 about
 118 sequence"
 118 images
 118 load
 118 in>>
 118 edges
 118 ui
 118 sm_20
 118 Flags,
 118 0x00000002
 118 0%
 117 standard
 117 errors
 117 vocabs.loader
 117 <slice>
 117 data>>
 117 longlong
 117 pos
 117 size_t*
 117 field
 117 LPCWSTR
 116 [let
 116 parse-stream
 116 1quotation
 116 "Applies
 116 rows
 116 75
 116 LONG
 116 win32-error=0/f
 115 least
 115 These
 115 column
 115 written
 115 add-library
 115 send
 115 username
 115 compiler.cfg
 115 FOLDABLE-INSN:
 114 $table
 114 debugger
 114 $or
 114 possible
 114 original
 114 simple
 114 digits
 114 2019
 114 display,
 113 length>>
 113 if-zero
 113 whose
 113 generated
 113 <reversed>
 113 value."
 113 key,
 113 client
 113 rgba
 113 uniform
 113 CUresult
 113 USHORT
 112 above
 112 virtual
 112 "("
 112 [1..b]
 112 want
 112 available
 112 blue
 112 spawn
 112 both?
 112 2013
 112 ave-time
 112 audio
 111 1234
 111 An
 111 union
 111 unclip
 111 attr
 111 db
 111 float-4
 111 file-info
 111 SUB
 110 "Adds
 110 deprecated
 110 sequence=
 110 "In
 110 "2"
 110 T
 110 2006
 110 90
 110 day
 110 0x02
 110 2014
 110 options,
 110 cell_t
 110 shader
 110 ave
 110 Key:
 110 out-d>>
 109 $error-description
 109 indicates
 109 blocks
 109 paths
 109 You
 109 zero
 109 endian
 109 "+"
 109 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 109 SD
 109 Vector2
 108 When
 108 \s
 108 Pestov,
 108 could
 108 store
 108 maybe{
 108 pairs
 108 with-directory
 108 alien.libraries
 108 39
 108 "seq1"
 108 400
 108 year
 108 key>>
 108 @c
 108 cairo_t*
 108 LPDIRECT3DDEVICE9
 107 less
 107 "Constructs
 107 "w"
 107 index,
 107 "gadget"
 107 04
 107 Jerry
 107 project-euler.common
 106 key?
 106 -10
 106 is,
 106 reference
 106 unix?
 106 indices
 106 same?
 106 maximum
 106 local
 106 track
 106 47
 106 math.matrices
 106 timeout
 106 device
 106 windows.types
 106 Draw
 105 MIXIN:
 105 "asdf"
 105 classes.tuple
 105 dynamic
 105 word,
 105 full
 105 string,
 105 ch/f
 105 1.5
 105 specifier"
 105 otherwise
 105 instance?
 105 depth
 105 quot'
 105 stream-write
 105 items
 105 recip
 105 46
 105 profile
 105 foreground
 105 y,
 105 track-add
 105 Take
 105 trials)
 105 temp2
 104 known
 104 eval
 104 unparse
 104 2cleave
 104 "B"
 104 v*
 104 pprint*
 104 Flags
 104 -----------
 104 SOLUTION:
 104 down,
 103 information
 103 adjoin
 103 prepose
 103 interface
 103 ","
 103 each-index
 103 define-core-syntax
 103 URL
 103 ptr
 103 --------
 103 wall,
 103 around,
 103 HDEVINFO
 102 harvest
 102 useful
 102 diff
 102 "i"
 102 generator
 102 "u"
 102 statement
 102 DESCRIPTION
 102 ##inc
 101 vocabularies
 101 red
 101 forget
 101 "object"
 101 "s"
 101 "\n"
 101 ?nth
 101 environment
 101 split-lines
 101 77
 101 2over
 101 zip
 101 "matrix"
 101 2020
 101 prime
 101 double-2-rep
 101 double-rep
 100 object"
 100 final
 100 within
 100 <alien>
 100 obj1
 100 obj2
 100 generalizations
 100 2007
 100 0x04
 100 win
 100 L{
 100 SOLUTION
 100 "graph
 100 beer.
 100 wall.
 100 instructions>>
 100 pname,
  99 each-integer
  99 a>>
  99 stream>>
  99 frame
  99 double>bits
  99 43
  99 67
  99 bootstrap-cell
  99 58
  99 Chris
  99 render
  99 ADD
  98 name,
  98 I
  98 added
  98 spread
  98 car
  98 "array"
  98 "s
  98 "h"
  98 compile
  98 dispatch
  98 continuation
  98 0xffffffff
  98 attribute
  98 0x03
  98 v*n
  98 memory>struct
  98 L,
  98 reps
  97 map!
  97 name"
  97 integers
  97 3append
  97 open
  97 map-reduce
  97 specialized
  97 69
  97 pointer:
  97 "0"
  97 1,
  97 "url"
  97 errptr
  97 ctx-reg
  97 cell-size
  97 float-rep
  96 0/0.
  96 tests
  96 equivalent
  96 member-eq?
  96 1024
  96 passing
  96 needs
  96 "}"
  96 filename
  96 arguments
  96 path>>
  96 bitnot
  96 box
  96 blank?
  96 65
  96 LPVOID
  95 must-not-fail
  95 writing
  95 "Hello
  95 <displaced-alien>
  95 6.0
  95 checksums
  95 delta
  95 <dlist>
  95 pprint-word
  95 0x00000004
  94 0.1
  94 compare
  94 stack."
  94 "Converts
  94 stack.
  94 error."
  94 rules
  94 "T{
  94 bit?
  94 "seq2"
  94 98
  94 >be
  94 model>>
  94 emitter
  94 scratch-reg
  93 "["
  93 from>>
  93 word.
  93 collection
  93 >>name
  93 here
  93 "newseq"
  93 stream"
  93 component
  93 identity
  93 round
  93 0.25
  93 "q"
  93 tag-bits
  93 97
  93 0x40
  93 content
  93 regular
  93 gc-map
  93 compiler.tree
  93 convert-farkup
  92 "]"
  92 User
  92 ";
  92 greater
  92 ">"
  92 close
  92 file-contents
  92 disposable
  92 generate
  92 4array
  92 authentication
  92 LD
  92 socket
  92 vec>>
  92 rep>>
  92 jit-load-cell
  92 DeviceInfoSet,
  91 D
  91 basic
  91 io.backend
  91 delete
  91 try
  91 entries
  91 102
  91 doesn't
  91 UI
  91 resulting
  91 scale
  91 combinators.smart
  91 72
  91 73
  91 n*v
  91 grid
  91 monitor
  91 typedef
  91 (100
  91 C+
  91 SIZE_T
  90 superclass
  90 remove
  90 beginning
  90 lookup-vocab
  90 stack,
  90 $slots
  90 stream-read1
  90 2/
  90 usage
  90 id>>
  90 Z
  90 vertices
  90 param
  90 76
  90 month
  90 article
  90 env
  90 with-out-parameters
  90 arg1
  90 Nibbles
  90 compiler.cfg.registers
  90 pDesc
  89 comment
  89 1.
  89 (see
  89 common
  89 with-variables
  89 counter
  89 pad-head
  89 gc
  89 null
  89 through
  89 odd?
  89 alien-callback
  89 bootstrap-cells
  89 <groups>
  89 Tom
  89 GLdouble*
  89 ##set-slot-imm
  88 ?{
  88 word>>
  88 sequence,
  88 integers"
  88 below
  88 representing
  88 object."
  88 wrapper
  88 required
  88 Check
  88 Ehrenberg
  88 pop
  88 prev
  88 "Prints
  88 opcode
  88 05
  87 running
  87 3dup
  87 ?unless
  87 120
  87 alien.strings
  87 except
  87 map-sum
  87 previous
  87 >c-ptr
  87 with-disposal
  87 "1
  87 lists
  87 io.styles
  87 mailbox
  87 pack
  87 <gadget>
  87 time+
  87 fd
  87 read-response
  87 APPLICATION_ERROR_MASK
  87 ERROR_SEVERITY_ERROR
  86 H
  86 \n
  86 "When
  86 directly
  86 special
  86 callstack
  86 -6
  86 compiled
  86 those
  86 live
  86 sift
  86 in?
  86 allocated
  86 align
  86 num
  86 shuffle
  86 i1
  86 i2
  86 e1
  86 pref-dim
  86 uint64_t
  86 HINF
  85 QUALIFIED-WITH:
  85 step
  85 begin
  85 satisfy
  85 during
  85 unit
  85 thrown
  85 existing
  85 works
  85 push-all
  85 finally
  85 optional
  85 88
  85 replace
  85 timer
  85 size,
  85 connection
  85 108
  85 cdr
  85 dlist
  85 Register
  85 spill-slot
  84 init
  84 slots:"
  84 "vocab"
  84 vocab-name
  84 300
  84 ?at
  84 A,
  84 value.
  84 "stream"
  84 with-file-reader
  84 &free
  84 out>>
  84 selector
  84 10.0
  84 markup
  84 c:int
  84 take-char
  84 imm
  84 GLfloat*
  84 imm9
  83 All
  83 create-word
  83 unsigned
  83 "hello
  83 defines
  83 flip
  83 exception
  83 -1/0.
  83 61
  83 62
  83 >hex
  83 elt1
  83 elt2
  83 pixel
  83 ];
  83 c,
  83 blas-vector-base
  83 ALPHA,
  83 REAL(*)
  83 rx
  83 short-8-rep
  82 ratio
  82 ?first
  82 declared
  82 sin
  82 equal?
  82 head-slice
  82 tail-slice
  82 even
  82 vocabs.parser
  82 file-name
  82 throws
  82 2022
  82 extension
  82 owner
  82 to>>
  82 vdot
  82 width,
  82 location,
  82 Vector3
  82 S1
  82 S2
  82 HMODULE
  81 tool
  81 "There
  81 done
  81 wrap
  81 number=
  81 0xFF
  81 page
  81 rs-reg
  81 "from"
  81 <repetition>
  81 type-number
  81 trim
  81 io.sockets
  81 io.files.temp
  81 io.launcher
  81 ui.gestures
  81 count,
  81 mouseo
  81 resolver
  81 DOUBLE-PRECISION(*)
  81 COMPLEX(*)
  81 DOUBLE-COMPLEX(*)
  81 vregs
  81 0x7fffffff
  81 pane
  81 live-interval
  80 "Thrown
  80 o
  80 "\""
  80 were
  80 together
  80 scope
  80 application
  80 clear-assoc
  80 readln
  80 supported
  80 -16
  80 normalize
  80 On
  80 free
  80 239
  80 macosx
  80 "3"
  80 receive
  80 ones
  80 Aaron
  80 ui.gadgets.worlds
  80 insert-tuple
  80 ctx
  80 <c-direct-array>
  80 Count
  80 -0700"
  80 W*
  80 Bool
  79 SBUF"
  79 "TUPLE:
  79 "Reads
  79 "alien"
  79 represents
  79 [=[
  79 tools.deploy.config
  79 minutes
